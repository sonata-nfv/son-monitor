{
   "swagger":"2.0",
   "info":{
      "title":"VnV Monitoring Manager API",
      "description":"VnV Monitoring Manager API",
      "termsOfService":"",
      "contact":{
         "email":"pkarkazis@synelixis.com"
      },
      "license":{
         "name":"Apache 2.0"
      },
      "version":"v2.0"
   },
   "host":"vnv-monitor-manager.5gtango.eu:8000",
   "schemes":[
      "http"
   ],
   "basePath":"/",
   "consumes":[
      "application/json"
   ],
   "produces":[
      "application/json"
   ],
   "securityDefinitions":{
      "Basic":{
         "type":"basic"
      }
   },
   "security":[
      {
         "Basic":[

         ]
      }
   ],
   "paths":{
      "/api/v2/active-monitoring-tests":{
         "post":{
            "operationId":"api_v2_active-monitoring-tests_create",
            "description":"",
            "parameters":[
               {
                  "name":"data",
                  "in":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SntActMonResDetail"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/SntActMonResDetail"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[

         ]
      },
      "/api/v2/active-monitoring-tests/service/{srv_id}":{
         "get":{
            "operationId":"api_v2_active-monitoring-tests_service_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/SntActMonRes"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "delete":{
            "operationId":"api_v2_active-monitoring-tests_service_delete",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "204":{
                  "description":""
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"srv_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/active-monitoring-tests/service/{srv_id}/test/{test_id}":{
         "get":{
            "operationId":"api_v2_active-monitoring-tests_service_test_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/SntActMonResDetail"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"srv_id",
               "in":"path",
               "required":true,
               "type":"string"
            },
            {
               "name":"test_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/passive-monitoring-tests":{
         "get":{
            "operationId":"api_v2_passive-monitoring-tests_list",
            "description":"",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of results to return per page.",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"The initial index from which to return the results.",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "required":[
                        "count",
                        "results"
                     ],
                     "type":"object",
                     "properties":{
                        "count":{
                           "type":"integer"
                        },
                        "next":{
                           "type":"string",
                           "format":"uri"
                        },
                        "previous":{
                           "type":"string",
                           "format":"uri"
                        },
                        "results":{
                           "type":"array",
                           "items":{
                              "$ref":"#/definitions/SntPasMonRes"
                           }
                        }
                     }
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[

         ]
      },
      "/api/v2/passive-monitoring-tests/service/{srv_id}":{
         "get":{
            "operationId":"api_v2_passive-monitoring-tests_service_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/SntPasMonResDetail"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"srv_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/prometheus/configuration":{
         "get":{
            "operationId":"api_v2_prometheus_configuration_list",
            "description":"",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of results to return per page.",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"The initial index from which to return the results.",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "required":[
                        "count",
                        "results"
                     ],
                     "type":"object",
                     "properties":{
                        "count":{
                           "type":"integer"
                        },
                        "next":{
                           "type":"string",
                           "format":"uri"
                        },
                        "previous":{
                           "type":"string",
                           "format":"uri"
                        },
                        "results":{
                           "type":"array",
                           "items":{
                              "$ref":"#/definitions/SntPromConf"
                           }
                        }
                     }
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[

         ]
      },
      "/api/v2/prometheus/metrics":{
         "get":{
            "operationId":"api_v2_prometheus_metrics_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/promMetricsList"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[

         ]
      },
      "/api/v2/prometheus/metrics/name/{metricName}":{
         "get":{
            "operationId":"api_v2_prometheus_metrics_name_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/promMetricsList"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"metricName",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/prometheus/targets":{
         "get":{
            "operationId":"api_v2_prometheus_targets_list",
            "description":"",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of results to return per page.",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"The initial index from which to return the results.",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "required":[
                        "count",
                        "results"
                     ],
                     "type":"object",
                     "properties":{
                        "count":{
                           "type":"integer"
                        },
                        "next":{
                           "type":"string",
                           "format":"uri"
                        },
                        "previous":{
                           "type":"string",
                           "format":"uri"
                        },
                        "results":{
                           "type":"array",
                           "items":{
                              "$ref":"#/definitions/SntPromTargetList"
                           }
                        }
                     }
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "post":{
            "operationId":"api_v2_prometheus_targets_create",
            "description":"",
            "parameters":[
               {
                  "name":"data",
                  "in":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SntPromTarget"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/SntPromTarget"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[

         ]
      },
      "/api/v2/prometheus/targets/{sp_name}":{
         "delete":{
            "operationId":"api_v2_prometheus_targets_delete",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "204":{
                  "description":""
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"sp_name",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/services":{
         "get":{
            "operationId":"api_v2_services_list",
            "description":"",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of results to return per page.",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"The initial index from which to return the results.",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "required":[
                        "count",
                        "results"
                     ],
                     "type":"object",
                     "properties":{
                        "count":{
                           "type":"integer"
                        },
                        "next":{
                           "type":"string",
                           "format":"uri"
                        },
                        "previous":{
                           "type":"string",
                           "format":"uri"
                        },
                        "results":{
                           "type":"array",
                           "items":{
                              "$ref":"#/definitions/SntServices"
                           }
                        }
                     }
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "post":{
            "operationId":"api_v2_services_create",
            "description":"",
            "parameters":[
               {
                  "name":"data",
                  "in":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/LightService"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/LightService"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[

         ]
      },
      "/api/v2/services/{srv_id}":{
         "delete":{
            "operationId":"api_v2_services_delete",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "204":{
                  "description":""
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"srv_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/services/{srv_id}/metrics":{
         "get":{
            "operationId":"api_v2_services_metrics_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/promMetricsList"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"srv_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/vnfs/{vnf_id}/metrics":{
         "get":{
            "operationId":"api_v2_vnfs_metrics_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/promMetricsList"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"vnf_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/api/v2/vnfs/{vnf_id}/vdu/{vdu_id}/metrics":{
         "get":{
            "operationId":"api_v2_vnfs_vdu_metrics_read",
            "description":"",
            "parameters":[

            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "$ref":"#/definitions/promMetricsList"
                  }
               }
            },
            "tags":[
               "api"
            ]
         },
         "parameters":[
            {
               "name":"vdu_id",
               "in":"path",
               "required":true,
               "type":"string"
            },
            {
               "name":"vnf_id",
               "in":"path",
               "required":true,
               "type":"string"
            }
         ]
      },
      "/pings":{
         "get":{
            "operationId":"pings_list",
            "description":"",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Number of results to return per page.",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"The initial index from which to return the results.",
                  "required":false,
                  "type":"integer"
               }
            ],
            "responses":{
               "200":{
                  "description":"",
                  "schema":{
                     "required":[
                        "count",
                        "results"
                     ],
                     "type":"object",
                     "properties":{
                        "count":{
                           "type":"integer"
                        },
                        "next":{
                           "type":"string",
                           "format":"uri"
                        },
                        "previous":{
                           "type":"string",
                           "format":"uri"
                        },
                        "results":{
                           "type":"array",
                           "items":{
                              "$ref":"#/definitions/Health"
                           }
                        }
                     }
                  }
               }
            },
            "tags":[
               "pings"
            ]
         },
         "parameters":[

         ]
      }
   },
   "definitions":{
      "SntActMonResDetail":{
         "required":[
            "service_id",
            "data"
         ],
         "type":"object",
         "properties":{
            "service_id":{
               "title":"Service id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "timestamp":{
               "title":"Timestamp",
               "type":"string",
               "format":"date-time"
            },
            "data":{
               "title":"Data",
               "type":"string"
            }
         }
      },
      "SntActMonRes":{
         "required":[
            "test_id",
            "service_id",
            "config"
         ],
         "type":"object",
         "properties":{
            "test_id":{
               "title":"Test id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "service_id":{
               "title":"Service id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "timestamp":{
               "title":"Timestamp",
               "type":"string",
               "format":"date-time"
            },
            "config":{
               "title":"Config",
               "type":"string"
            }
         }
      },
      "SntPasMonRes":{
         "required":[
            "service_id",
            "test_id"
         ],
         "type":"object",
         "properties":{
            "service_id":{
               "title":"Service id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "test_id":{
               "title":"Test id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "created":{
               "title":"Created",
               "type":"string",
               "format":"date-time",
               "x-nullable":true
            },
            "terminated":{
               "title":"Terminated",
               "type":"string",
               "format":"date-time"
            }
         }
      },
      "SntPasMonResDetail":{
         "required":[
            "service_id",
            "test_id",
            "data"
         ],
         "type":"object",
         "properties":{
            "service_id":{
               "title":"Service id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "test_id":{
               "title":"Test id",
               "type":"string",
               "maxLength":300,
               "minLength":1
            },
            "created":{
               "title":"Created",
               "type":"string",
               "format":"date-time",
               "x-nullable":true
            },
            "terminated":{
               "title":"Terminated",
               "type":"string",
               "format":"date-time"
            },
            "data":{
               "title":"Data",
               "type":"string"
            }
         }
      },
      "SntPromConf":{
         "required":[
            "config"
         ],
         "type":"object",
         "properties":{
            "config":{
               "title":"Config",
               "type":"string",
               "minLength":1
            }
         }
      },
      "promMetricLabel":{
         "type":"object",
         "properties":{

         }
      },
      "promMetricsList":{
         "required":[
            "metrics"
         ],
         "type":"object",
         "properties":{
            "metrics":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/promMetricLabel"
               }
            }
         }
      },
      "SntPromUrls":{
         "required":[
            "targets"
         ],
         "type":"object",
         "properties":{
            "targets":{
               "type":"array",
               "items":{
                  "type":"string",
                  "maxLength":32
               }
            }
         }
      },
      "SntPromTargets":{
         "required":[
            "static_configs",
            "job_name"
         ],
         "type":"object",
         "properties":{
            "static_configs":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SntPromUrls"
               }
            },
            "job_name":{
               "title":"Job name",
               "type":"string",
               "minLength":1
            }
         }
      },
      "SntPromTargetList":{
         "required":[
            "targets"
         ],
         "type":"object",
         "properties":{
            "targets":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SntPromTargets"
               }
            }
         }
      },
      "SntPromTargetUrls":{
         "required":[
            "sp_ip",
            "type",
            "sp_name",
            "targets"
         ],
         "type":"object",
         "properties":{
            "sp_ip":{
               "title":"Sp ip",
               "type":"string",
               "minLength":1
            },
            "type":{
               "title":"Type",
               "type":"string",
               "enum":[
                  "osm",
                  "sonata",
                  "onap"
               ]
            },
            "sp_name":{
               "title":"Sp name",
               "type":"string",
               "minLength":1
            },
            "targets":{
               "type":"array",
               "items":{
                  "type":"string",
                  "maxLength":32
               }
            }
         }
      },
      "SntPromTarget":{
         "required":[
            "targets"
         ],
         "type":"object",
         "properties":{
            "targets":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SntPromTargetUrls"
               }
            }
         }
      },
      "SntServices":{
         "required":[
            "ns_instance_id",
            "test_id"
         ],
         "type":"object",
         "properties":{
            "ns_instance_id":{
               "title":"Ns instance id",
               "type":"string",
               "minLength":1
            },
            "test_id":{
               "title":"Test id",
               "type":"string",
               "minLength":1
            },
            "created":{
               "title":"Created",
               "type":"string",
               "format":"date-time"
            },
            "terminated":{
               "title":"Terminated",
               "type":"string",
               "format":"date-time",
               "x-nullable":true
            }
         }
      },
      "LightFunctions":{
         "required":[
            "vnfr_id",
            "vc_id",
            "vim_id",
            "vim_endpoint"
         ],
         "type":"object",
         "properties":{
            "vnfr_id":{
               "title":"Vnfr id",
               "type":"string",
               "minLength":1
            },
            "vc_id":{
               "title":"Vc id",
               "type":"string",
               "minLength":1
            },
            "vim_id":{
               "title":"Vim id",
               "type":"string",
               "minLength":1
            },
            "vim_endpoint":{
               "title":"Vim endpoint",
               "type":"string",
               "minLength":1
            }
         }
      },
      "LightService":{
         "required":[
            "ns_instance_uuid",
            "test_id",
            "functions"
         ],
         "type":"object",
         "properties":{
            "ns_instance_uuid":{
               "title":"Ns instance uuid",
               "type":"string",
               "minLength":1
            },
            "test_id":{
               "title":"Test id",
               "type":"string",
               "minLength":1
            },
            "functions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LightFunctions"
               }
            }
         }
      },
      "Health":{
         "required":[
            "alive_since"
         ],
         "type":"object",
         "properties":{
            "alive_since":{
               "title":"Alive since",
               "type":"string",
               "format":"date-time"
            }
         }
      }
   }
}